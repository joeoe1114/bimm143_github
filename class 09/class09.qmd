---
title: "Class 09: Candy Analysis Mini Project"
author: "Joanne Wu (PID: A17060517)"
format: pdf
---

In today's class we will examine some data about candy from the 538 website.

## Import Data


## Data exploration

```{r}
candy_file <- "candy-data.txt"

candy = read.csv(candy_file, row.names=1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

There are `r nrow(candy)` in this data set.

```{r}
nrow(candy)
```

> Q2. How many fruity candy types ar ein the dataset?

```{r}
sum(candy$fruity)
```

> How many chocolate candies are in the data set?

```{r}
sum(candy$chocolate)
```


## My favorite candy vs yours

```{r}
candy["Snickers",]$winpercent
```

```{r}
candy["Welch's Fruit Snacks",]$winpercent
```

```{r}
candy["Warheads",]$winpercent
```

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["100 Grand",]$winpercent
```


> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat",]$winpercent
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the data set?

```{r}
skimr::skim(candy)
```

The variable 'winpercent' seems to be on a different scale than binary 0 to 1 scale.

> Q7. What do you think a zero and one represent for the candy$chocolate column?

A zero and one represents whether chocolate is present in the candy, zero means no chocolate, one means there is chocolate.

> Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent, breaks=10)
```

```{r}
library(ggplot2)
```

```{r}
ggplot(candy) +
  aes(winpercent) +
  geom_histogram()
```

```{r}
ggplot(candy) +
  aes(winpercent) +
  geom_histogram(bins=7)
```

> Q9. Is the distribution of winpercent values symmetrical?

No, it is kind of skewed to the right.

> Q10. Is the center of the distribution above or below 50%?

Below 50%.

```{r}
mean(candy$winpercent)
```

```{r}
summary(candy$winpercent)
```

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

Steps to solve this:

- first find all chocolate candy
- find their winpercent values
- calculate the mean of these values

- then do the same for fruity candy and compare with the mean for chocolate candy

```{r}
chocolate.inds <- candy$chocolate == 1
chocolate.win <- candy[chocolate.inds,]$winpercent
mean(chocolate.win)
```

```{r}
fruity.inds <- as.logical(candy$fruity)
fruit.win <- candy[fruity.inds,]$winpercent
mean(fruit.win)
```

Chocolate candies have a higher mean winpercent than fruity candies, so thus on average, higher rank.

> Q12. Is this difference statistically significant?

```{r}
t.test(chocolate.win, fruit.win)
```
Yes, it is statistically significant as the p-value is less than 0.05.

> Q13. What are the five least liked candy types in this set?

```{r}
x <- c(5,6,4)
sort(x)
```

```{r}
x[order(x)]
```

The order function returns the indices that make the input sorted.

```{r}
inds <- order(candy$winpercent)
head( candy[inds,], 5 )
```
```{r}
head( candy[inds,],5)
```

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
tail( candy[inds,],5)
```

> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy) +
  aes(winpercent, rownames(candy)) +
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent.

```{r}
#| fig-height: 10
#| fig-width: 7

ggplot(candy) +
  aes(winpercent, reorder( rownames(candy), winpercent)) +
  geom_col()
```

```{r}
ggsave("mybarplot.png", height=10)
```

![Export image that is a bit bigger so I can read it](mybarplot.png)

Add my custom colors to my barplot

```{r}
my_cols=rep("gray", nrow(candy))
my_cols[candy$fruity == 1] <-"pink"
my_cols
```

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

```{r}
#| fig-height: 10
#| fig-width: 7

ggplot(candy) +
  aes(winpercent, reorder( rownames(candy), winpercent)) +
  geom_col(fill = my_cols)
```

> Q17. What is the worst ranked chocolate candy?

The worst ranked chocolate candy is Sixlets.

> Q18. What is the best ranked fruity candy?

The best ranked fruity candy is Starburst.

Plot of winpercent vs pricepercent

```{r}
candy$pricepercent
ggplot(candy) + 
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_label(col=my_cols)
```

There are just too many labels in this above plot to be readable. We can use the `ggrepel` package to do a better job of placing labels so they minimize text overlap.

```{r}
library(ggrepel)

ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, max.overlap = 5, size = 3.3)
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Chocolate, such as Reese's Miniatures have high winpercent for relatively low pricepercent.

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

The top 5 most expensive candy types in the dataset are Nik L Nip, Nestle Smarties, Ring pop, Hershey's Milk Chocolate and Mr Good Bar. The least popular among the 5 is Nik L Nip.


## 5 Exploring the correlation structure

```{r}
library(corrplot)

cij <- cor(candy)
cij
```

```{r}
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Fruity and chocolate are anti-correlated.

> Q23. Similarly, what two variables are most positively correlated?

Chocolate and winpercent are most positively correlated. 

## 6 Principal Component Analysis

We will perform a PCA of the candy. Key-question: do we need to scale the data before PCA?

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

```{r}
plot(pca$x[,1], pca$x[,2], col=my_cols, pch=16)
```

Make a ggplot version of this figure:

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
head(my_data)
```

```{r}
ggplot(my_data) +
  aes(PC1, PC2, label=rownames(my_data)) +
  geom_point(col=my_cols) +
  geom_text_repel()
```

Make this a bit nicer

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)
p
```

```{r}
p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

```{r}
#| eval: False
library(plotly)
ggplotly(p)
```

How do the original variables contribute to our PCs? For this we look at the loadings component of our results object i.e. the `pca$rotation` object.

```{r}
head(pca$rotation)
```

Make a barplot with ggplot and order the bars by their value. Recall that you need a data.frame as input for ggplot 

```{r}
res <- as.data.frame(pca$rotation)
row.names(res)
```

```{r}
ggplot(res) +
  aes(PC1, reorder(rownames(res), PC1)) +
  geom_col()
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruit, Pluribus and hard are all picked up in the +ve direction and these do make sense based on the correlation structure in the data set. If you are a fruity candy you will tend to be hard and come in a packet with multiple candies in it (pluribus).

